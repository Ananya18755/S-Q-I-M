{"version":3,"sources":["components/Navbar.js","App.js","serviceWorker.js","components/Login.js","index.js","pages/Home.js","pages/About.js","pages/Parent.js","pages/Student.js","pages/Visitor.js","pages/Admin.js","pages/Root.js"],"names":["Navbar","useState","isOpen","setOpen","className","to","onClick","color","fontSize","App","Boolean","window","location","hostname","match","Login","field","FormControl","variant","TextField","label","type","Button","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8WAKe,SAASA,IAAU,IAAD,EACLC,oBAAS,GADJ,mBACxBC,EADwB,KAChBC,EADgB,KAO/B,OACE,yBAAKC,UAAU,UACb,6BACE,kBAAC,IAAD,CAASA,UAAU,YAAYC,GAAG,KAAlC,aAGA,kBAAC,IAAD,CACED,UAAU,OACVE,QAZW,WACjBH,GAASD,IAYHK,MAAM,UACNC,SAAS,WAGb,yBAAKJ,UAAWF,EAAS,WAAa,cACpC,kBAAC,IAAD,CAASG,GAAG,UAAZ,SACA,kBAAC,IAAD,CAASA,GAAG,YAAZ,WACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,UACA,kBAAC,IAAD,CAASA,GAAG,YAAZ,WACA,kBAAC,IAAD,CAASA,GAAG,UAAZ,SACA,kBAAC,IAAD,CAASA,GAAG,SAAZ,UCnBOI,MARf,WACE,OACE,yBAAKL,UAAU,OACb,kBAACJ,EAAD,QCKcU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gDCdS,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,MAC7B,OACE,yBAAKZ,UAAU,SACb,kBAACa,EAAA,EAAD,CAAab,UAAU,aAAac,QAAQ,YAC1C,kBAACC,EAAA,EAAD,CAAWD,QAAQ,WAAWE,MAAOJ,IACrC,kBAACG,EAAA,EAAD,CAAWD,QAAQ,WAAWG,KAAK,WAAWD,MAAM,cAEtD,gCACE,kBAACE,EAAA,EAAD,CAAQlB,UAAU,eAAec,QAAQ,WAAWX,MAAM,aAA1D,Y,MCGRgB,IAASC,OACP,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UCjBjB,WACX,OACI,6BACI,yDDeN,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,UElBlB,WACb,OACE,6BACE,2DFgBA,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,UGnBnB,WACX,OACI,6BACI,4DHiBN,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,UIpBpB,WACX,OACI,6BACI,4DJkBN,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,UKrBpB,WACX,OACI,6BACI,6DLmBN,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASC,UMnBlB,WACb,OACE,yBAAKvB,UAAU,cACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBACb,6CACA,kIAEyC,MAG3C,kBAACW,EAAD,CAAOC,MAAO,gBAEhB,yBAAKZ,UAAU,eACb,yBAAKA,UAAU,qBACb,2CACA,kIAEyC,MAG3C,kBAACW,EAAD,CAAOC,MAAM,kBNDf,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UOvBb,WACb,OACE,6BACE,gCACE,+DAEE,6BAFF,6CPsBNC,SAASC,eAAe,SFuGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f2960210.chunk.js","sourcesContent":["import ListRoundedIcon from \"@material-ui/icons/ListRounded\";\r\nimport React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../styles/navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"topnav\">\r\n      <div>\r\n        <NavLink className=\"app_title\" to=\"/\">\r\n          CHBSDCHKI\r\n        </NavLink>\r\n        <ListRoundedIcon\r\n          className=\"icon\"\r\n          onClick={handleOpen}\r\n          color=\"primary\"\r\n          fontSize=\"large\"\r\n        />\r\n      </div>\r\n      <div className={isOpen ? \"show_nav\" : \"nav_header\"}>\r\n        <NavLink to=\"/admin\">Admin</NavLink>\r\n        <NavLink to=\"/visitor\">Visitor</NavLink>\r\n        <NavLink to=\"/parent\">Parent</NavLink>\r\n        <NavLink to=\"/student\">Student</NavLink>\r\n        <NavLink to=\"/about\">About</NavLink>\r\n        <NavLink to=\"/home\">Home</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Button, FormControl, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../styles/login.css\";\r\n\r\nexport default function Login({field}) {\r\n  return (\r\n    <div className='login'>\r\n      <FormControl className=\"login_form\" variant='outlined'>\r\n        <TextField variant='outlined' label={field} />\r\n        <TextField variant='outlined' type=\"password\" label=\"password\" />\r\n      </FormControl>\r\n      <center>\r\n        <Button className=\"login_button\" variant=\"outlined\" color=\"secondary\">\r\n          Log In\r\n        </Button>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\";\nimport Parent from \"./pages/Parent\";\nimport Student from \"./pages/Student\";\nimport Visitor from \"./pages/Visitor\";\nimport About from \"./pages/About\";\nimport Navbar from \"./components/Navbar\";\nimport Root from \"./pages/Root\";\n\nReactDOM.render(\n  <>\n    <Router>\n      <App />\n      <Route exact path=\"/home\" component={Home}></Route>\n      <Route exact path=\"/about\" component={About}></Route>\n      <Route exact path=\"/parent\" component={Parent}></Route>\n      <Route exact path=\"/student\" component={Student}></Route>\n      <Route exact path=\"/visitor\" component={Visitor}></Route>\n      <Route exact path=\"/admin\" component={Admin}></Route>\n      <Route exact path=\"/\" component={Root}></Route>\n    </Router>\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Hello from home page!</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>Hello from about page !</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Parent() {\r\n    return (\r\n        <div>\r\n            <h1>Hello from parent page !</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Student() {\r\n    return (\r\n        <div>\r\n            <h1>Hello from Student page!</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Visitor() {\r\n    return (\r\n        <div>\r\n            <h1>Hello from visitor page !</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Login from \"../components/Login\";\r\n\r\nimport \"../styles/admin.css\";\r\n\r\nexport default function Admin() {\r\n  return (\r\n    <div className=\"admin_page\">\r\n      <div className=\"faculty_login\">\r\n        <div className=\"admin_description\">\r\n          <h1>About Faculty</h1>\r\n          <p>\r\n            dsadasdk lkadnasknd asd askdnak nasda nasdn;akndasknd ak;ndas\r\n            na;ksnd a;ksnd ;knas;k ndas;kn nsa;nas{\" \"}\r\n          </p>\r\n        </div>\r\n        <Login field =\"Faculty ID\" />\r\n      </div>\r\n      <div className=\"admin_login\">\r\n        <div className=\"admin_description\">\r\n          <h1>About Admin</h1>\r\n          <p>\r\n            dsadasdk lkadnasknd asd askdnak nasda nasdn;akndasknd ak;ndas\r\n            na;ksnd a;ksnd ;knas;k ndas;kn nsa;nas{\" \"}\r\n          </p>\r\n        </div>\r\n        <Login field=\"Admin ID\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Root() {\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h1>\r\n          Welcome to Student info system !\r\n          <br />\r\n          Please use the Navbar to explore !\r\n        </h1>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}